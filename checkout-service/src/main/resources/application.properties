spring.application.name = checkout-service
server.port = 8031
eureka.client.serviceUrl.defaultZone=http://eureka-server:8761/eureka/
management.endpoints.web.exposure.include = info, health, circuitbreakers, circuitbreakerevents
management.health.circuitbreakers.enabled = true
management.endpoint.health.show-details = always

management.info.env.enabled= true
info.app.name = checkout-service
info.app.description = checkout servicio
info.app.version = 1.0


#eureka.instance.statusPageUrlPath: http://localhost:8030/actuator/info
#eureka.instance.healtCheckUrlPath: http://localhost:8030/actuator/health

spring.cloud.config.discovery.enabled=true
spring.cloud.config.discovery.serviceId = config-service-elxrojo
spring.config.import=optional:configserver:

eureka.instance.hostname=localhost

#LoadBalancer properties
loadbalancer.client.name=product-service
spring.cloud.loadbalancer.configurations=weighted

#Properties para ser un servidor de recursos
spring.security.oauth2.resourceserver.jwt.issuer-uri= http://localhost:8080/realms/MicroservicesPractice




resilience4j.circuitbreaker.instances.product.allowHealthIndicatorToFail = false
resilience4j.circuitbreaker.instances.product.registerHealthIndicator= true


resilience4j.circuitbreaker.instances.product.slidingWindowType=COUNT_BASED
resilience4j.circuitbreaker.instances.product.slidingWindowSize = 5
resilience4j.circuitbreaker.instances.product.failureRateThreshold= 50


resilience4j.circuitbreaker.instances.product.waitDurationInOpenState = 15000
resilience4j.circuitbreaker.instances.product.permittedNumberOfCallsInHalfOpenState = 3
resilience4j.circuitbreaker.instances.product.automaticTransitionFromOpenToHalfOpenEnabled = true

resilience4j.retry.instances.product.maxAttempts = 3
resilience4j.retry.instances.product.waitDuration = 500
resilience4j.retry.instances.product.retryExceptions[0] = feign.FeignException$InternalServerError



management.tracing.sampling.probability= 1.0
logging.file.name=logs/checkout-service.log